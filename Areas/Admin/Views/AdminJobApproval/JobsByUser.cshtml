@model IEnumerable<JobTable>
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Manrope:wght@400;600&display=swap" rel="stylesheet" />
    <title>Danh sách công việc</title>
    <style>
        body {
            font-family: 'Manrope', sans-serif;
        }

        h2 {
            font-family: 'Manrope', sans-serif;
            margin-top: 20px;
            font-weight: 600;
            padding-bottom: 25px
        }

        .table-container {
            margin-top: 30px;
            max-width: 1300px;
            margin: auto;
        }

        .table {
            width: 100%;
            border-radius: 0.5rem;
            overflow: hidden;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
        }

        .table th, .table td {
            vertical-align: middle;
            padding: 15px;
            text-align: center;
        }

        .table-dark th {
            color: #ffffff;
            background-color: #343a40;
        }

        .btn-success, .btn-danger, .btn-info {
            font-weight: 600;
            font-size: 0.9rem;
            padding: 6px 10px;
        }

        /* Animation for Pending status */
        @@keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }

        .status-pendingEdit{

            animation: pulse 1s infinite;
        }

        .status-pending {
            color: #dc3545; 
            font-weight: bold;
            animation: pulse 1s infinite;
        }

        .pagination .page-item .page-link {
            color: #343A40; 
            background-color: transparent; 
            border: 1px solid #343A40; 
            transition: all 0.3s ease; 
        }

        .pagination .page-item.active .page-link {
            background-color: #343A40; 
            color: #FFFFFF; 
            border-color: #343A40; 
        }

        .pagination .page-item .page-link:hover {
            background-color: #343A40; 
            color: #FFFFFF; 
        }

    </style>
</head>
<body>
    <div class="table-container">
        <a asp-action="Index" class="btn btn-light mb-3" title="Quay lại">
            <i class="fas fa-arrow-left"></i>
        </a>

        <h2>Công việc của @Model.FirstOrDefault()?.ApplicationUser.Email</h2>

        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th><i class="fas fa-briefcase"></i> Tiêu đề công việc</th>
@*                         <th><i class="fas fa-money-bill-wave"></i> Mức lương</th> *@
                        <th><i class="fas fa-calendar-alt"></i> Ngày đăng công việc</th>
                        <th><i class="fas fa-check-circle"></i> Trạng thái</th>
                        <th><i class="fas fa-users"></i> Số người ứng tuyển</th>
                        <th><i class="fas fa-check"></i> Duyệt</th>
                        <th><i class="fas fa-times-circle"></i> Từ chối</th>
                        <th><i class="fas fa-cogs"></i> Trạng thái hoạt động</th>
                        <th><i class="fas fa-info-circle"></i> Chi tiết</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var job in Model)
                    {
                        <tr>
                            <td>@job.JobTitle</td>
                            @* <td>
                                @if (job.SalaryMin.HasValue && job.SalaryMax.HasValue)
                                {
                                    @($"{job.SalaryMin.Value:n0} - {job.SalaryMax.Value:n0} VND")
                                }
                                else
                                {
                                    <span class="text-muted">Liên hệ để biết mức lương</span>
                                }
                            </td> *@
                            <td>
                                @job.CreationDate.ToString("dd/MM/yyyy")
                            </td>




                            <td>
                                @switch (job.Status)
                                {
                                    case ApprovalStatus.Pending:
                                        <span class="status-pending"><i class="fas fa-clock"></i> Chờ duyệt</span>
                                        break;
                                    case ApprovalStatus.Approved:
                                        <span class="text-success"><i class="fas fa-check-circle"></i> Hoạt động</span>
                                        break;
                                    case ApprovalStatus.Rejected:
                                        <span class="text-danger"><i class="fas fa-times-circle"></i> Bị từ chối</span>
                                        break;
                                    case ApprovalStatus.PendingEdit:
                                        <span class="status-pendingEdit text-warning"><i class="fas fa-edit"></i> Chờ chỉnh sửa</span>
                                        break;
                                    case ApprovalStatus.ApprovedEdit:
                                        <span class="text-success"><i class="fas fa-check-double"></i> Hoạt động</span>
                                        break;
                                    case ApprovalStatus.RejectedEdit:
                                        <span class="text-danger"><i class="fas fa-ban"></i> Từ chối chỉnh sửa</span>
                                        break;
                                    case ApprovalStatus.Filled:
                                        <span class="text-muted"><i class="fas fa-users"></i> Đã đủ</span>
                                        break;
                                    case ApprovalStatus.Working:
                                        <span class="text-success"><i class="fas fa-check-circle"></i> Hoạt động</span>
                                        break;
                                    case ApprovalStatus.Break:
                                        <span class="text-dark"> <i class="fas fa-pause-circle me-3"></i> Tạm ngừng</span>
                                        break;
                                    default:
                                        <span>Không xác định</span>
                                        break;
                                }
                            </td>
                            <td>
                                @if (job.Status == ApprovalStatus.Pending)
                                {
                                    <span>Chưa duyệt</span>  <!-- Hoặc "Đang chờ duyệt" -->
                                }
                                else
                                {
                                    <span>@job.JobApplications.Count</span>
                                }
                            </td>


                            <td>
                                @if (job.Status == ApprovalStatus.Pending)
                                {
                                    <button type="button" class="btn btn-success" onclick="approveJob(@job.Id)">
                                        <i class="fas fa-thumbs-up"></i>
                                    </button>
                                }
                            </td>
                            <td>
                                @if (job.Status == ApprovalStatus.Pending)
                                {
                                    <button type="button" class="btn btn-danger" onclick="rejectJob(@job.Id)">
                                        <i class="fas fa-thumbs-down"></i>
                                    </button>
                                }
                            </td>
                            <td>
                                <!-- Button Toggle Active/Inactive -->
                                <button type="button" class="btn @(job.IsActive == true ? "btn-warning" : "btn-primary") btn-sm"
                                        onclick="toggleJobStatus(@job.Id)">
                                    <i class="fas @(job.IsActive == true ? "fa-pause-circle" : "fa-play-circle")"></i>
                                    @(job.IsActive == true ? "Tạm ngừng" : "Hoạt động")
                                </button>
                            </td>

                            <td>
                                <a asp-action="JobDetail" asp-route-id="@job.Id" class="btn btn-info">
                                    <i class="fas fa-info-circle"></i> Chi tiết
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="d-flex justify-content-center mt-4">
                <nav>
                    <ul class="pagination">
                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                <a class="page-link" href="?userId=@Model.FirstOrDefault()?.ApplicationUser.Id&page=@i">@i</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>

        </div>
    </div>
</body>

@foreach (var job in Model)
{
    <div class="modal fade" id="rejectJobModal-@job.Id" tabindex="-1" role="dialog" aria-labelledby="rejectJobModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="rejectJobModalLabel">Lý do từ chối công việc</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form asp-action="RejectJob" method="post">
                    <div class="modal-body">
                        <input type="hidden" name="id" value="@job.Id" />
                        <div class="form-group">
                            <label for="reason">Lý do từ chối:</label>
                            <textarea class="form-control" name="reason" id="reason" rows="3" required></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                        <button type="submit" class="btn btn-danger">Xác nhận từ chối</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}


</html>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.18/signalr.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script type="text/javascript">
    // Khởi tạo kết nối với NotificationHub
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/notificationHub")
        .build();

    // Bắt đầu kết nối
    connection.start().catch(err => console.error(err.toString()));

    // Nhận thông báo từ server và hiển thị với SweetAlert2
    connection.on("ReceiveNotification", function (message) {
        Swal.fire({
            title: "Thông báo mới",
            text: message,
            icon: "info",
            confirmButtonText: "OK"
        });
    });

    // Hàm phê duyệt công việc với SweetAlert2
    function approveJob(jobId) {
        Swal.fire({
            title: 'Bạn có chắc chắn phê duyệt công việc này?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#28a745',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Phê duyệt',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                $.post('/Admin/AdminJobApproval/ApproveJob', { id: jobId })
                    .done(function() {
                        Swal.fire(
                            'Phê duyệt thành công!',
                            'Công việc đã được phê duyệt.',
                            'success'
                        ).then(() => location.reload());
                    })
                    .fail(function() {
                        Swal.fire(
                            'Lỗi!',
                            'Đã xảy ra lỗi khi phê duyệt công việc.',
                            'error'
                        );
                    });
            }
        });
    }

    // Hàm từ chối công việc với SweetAlert2
    function rejectJob(jobId) {
        Swal.fire({
            title: 'Lý do từ chối công việc',
            input: 'textarea',
            inputPlaceholder: 'Nhập lý do từ chối...',
            inputAttributes: {
                'aria-label': 'Nhập lý do từ chối'
            },
            showCancelButton: true,
            confirmButtonText: 'Từ chối',
            cancelButtonText: 'Hủy',
            confirmButtonColor: '#d33',
            cancelButtonColor: '#6c757d',
            preConfirm: (reason) => {
                if (!reason) {
                    Swal.showValidationMessage('Lý do từ chối là bắt buộc');
                }
                return reason;
            }
        }).then((result) => {
            if (result.isConfirmed) {
                $.post('/Admin/AdminJobApproval/RejectJob', { id: jobId, reason: result.value })
                    .done(function() {
                        Swal.fire(
                            'Đã từ chối!',
                            'Công việc đã bị từ chối.',
                            'success'
                        ).then(() => location.reload());
                    })
                    .fail(function() {
                        Swal.fire(
                            'Lỗi!',
                            'Đã xảy ra lỗi khi từ chối công việc.',
                            'error'
                        );
                    });
            }
        });
    }

    function toggleJobStatus(jobId) {
        Swal.fire({
            title: 'Bạn có chắc muốn thay đổi trạng thái công việc này?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Tạm ngừng',
            cancelButtonText: 'Hủy',
            confirmButtonColor: '#007bff',
            cancelButtonColor: '#d33',
            input: 'textarea',
            inputPlaceholder: 'Nhập lý do tạm ngừng...',
            inputAttributes: {
                'aria-label': 'Nhập lý do tạm ngừng'
            },
            preConfirm: (reason) => {
                if (!reason) {
                    Swal.showValidationMessage('Lý do tạm ngừng là bắt buộc!');
                }
                return reason;
            }
        }).then((result) => {
            if (result.isConfirmed) {
                $.post('/Admin/AdminJobApproval/ToggleJobStatus', { id: jobId, reason: result.value })
                    .done(function (response) {
                        if (response.success) {
                            Swal.fire(
                                'Thành công!',
                                response.isActive
                                    ? 'Công việc đã được kích hoạt lại.'
                                    : `Công việc đã bị tạm ngừng. Lý do: ${response.reason}`,
                                'success'
                            ).then(() => location.reload());
                        }
                    })
                    .fail(function () {
                        Swal.fire('Lỗi!', 'Đã xảy ra lỗi khi thay đổi trạng thái công việc.', 'error');
                    });
            }
        });
    }




</script>

