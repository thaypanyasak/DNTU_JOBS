@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

    <link href="https://fonts.googleapis.com/css2?family=Manrope:wght@400;600&display=swap" rel="stylesheet" />

    <style>
        body {
            font-family: 'Manrope', sans-serif;
            background-color: #f5f6f8;
        }

        /* Đảm bảo các nút "Đăng ký" và "Đăng nhập" không xuống dòng */
        .header-container {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            background-color: #F5F6F8;
            padding-left: 20px;
            padding-right: 20px;
            width: 100%; /* Đảm bảo container chiếm đủ chiều rộng */
        }

        .d-flex {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            gap: 5px; /* Đảm bảo có khoảng cách giữa các nút */
            white-space: nowrap; /* Ngăn các phần tử xuống dòng */
        }

        /* Giảm margin-right để tránh bị dư không gian */
        .custom-button {
            padding: 10px 20px;
            border-radius: 25px;
            font-size: 1rem;
            font-weight: 600;
            text-decoration: none;
            color: #ffffff;
            display: inline-block;
            text-align: center;
            margin: 0 5px; /* Điều chỉnh margin nếu cần */
            transition: background-color 0.4s ease, color 0.3s ease, box-shadow 0.3s ease, transform 0.3s ease;
        }

        /* Nút Đăng ký */
        .register-button {
            background: linear-gradient(135deg, #AD0514, #D32F2F);
            border: 2px solid transparent;
        }

            .register-button:hover {
                background: linear-gradient(135deg, #FF6F61, #FFA07A);
                color: #333;
                border-color: #D32F2F;
                box-shadow: 0 10px 20px rgba(255, 112, 97, 0.4);
                transform: translateY(-3px) scale(1.1);
                text-decoration: none;
            }

        /* Nút Đăng nhập */
        .login-button {
            background: linear-gradient(135deg, #333, #444);
            border: 2px solid transparent;
        }

            .login-button:hover {
                background: linear-gradient(135deg, #555, #666);
                color: #ffffff;
                border-color: #333;
                box-shadow: 0 8px 16px rgba(85, 85, 85, 0.3);
                transform: translateY(-2px) scale(1.05);
                text-decoration: none;
            }






        /* Định dạng chung cho nút Avatar */
        /* Định dạng chung cho nút Avatar */
        .avatar-button {
            position: relative;
            border: none;
            background: none;
            cursor: pointer;
            padding: 0;
        }

            .avatar-button img {
                width: 50px;
                height: 50px;
                border-radius: 50%;
                object-fit: cover;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
                transition: transform 0.3s ease, box-shadow 0.3s ease;
                position: relative;
                z-index: 1;
            }

            /* Lớp phủ gradient cho hiệu ứng hover */
            .avatar-button::after {
                content: "";
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                border-radius: 50%;
                background: linear-gradient(135deg, #C3171C, #FF5733); /* Gradient đỏ cam */
                opacity: 0;
                transition: opacity 0.3s ease;
                z-index: 0;
            }

            /* Hover effect with glow and gradient */
            .avatar-button:hover img {
                transform: scale(1.15);
                box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3), 0 0 15px rgba(195, 23, 28, 0.6); /* Glow đỏ nhạt */
            }

            .avatar-button:hover::after {
                opacity: 0.6; /* Hiển thị lớp phủ gradient */
            }

            /* Hiệu ứng “glow” nhẹ khi nhấn */
            .avatar-button img:active {
                transform: scale(1.1);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2), 0 0 15px rgba(195, 23, 28, 0.6); /* Ánh sáng khi nhấn */
            }



        .avatar-menu-content {
            display: none;
            position: absolute;
            top: 50px;
            right: 0;
            background-color: #ffffff;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            border-radius: 8px;
            width: 200px;
            padding: 10px 0;
            z-index: 1000;
        }

            .avatar-menu-content a,
            .avatar-menu-content button {
                display: block;
                width: 100%;
                padding: 10px 20px;
                color: #333;
                text-align: left;
                background: none;
                border: none;
                text-decoration: none;
                font-size: 0.95rem;
                transition: background-color 0.3s, color 0.3s;
            }

                .avatar-menu-content a:hover,
                .avatar-menu-content button:hover {
                    background-color: #f7f7f7;
                    color: #AD0514;
                }

                .avatar-menu-content a i,
                .avatar-menu-content button i {
                    margin-right: 10px;
                    color: #AD0514;
                }

        @@media (max-width: 768px) {
            .avatar-menu-content {
                position: absolute;
                top: 0;
                right: 0;
            }
        }
    </style>
</head>

<body>

    <div class="header-container d-flex justify-content-end align-items-center" style="background-color: #F5F6F8;">
        @if (SignInManager.IsSignedIn(User))
        {
            var currentUser = await UserManager.GetUserAsync(User);
            if (currentUser != null)
            {
                var roles = await UserManager.GetRolesAsync(currentUser);  // Khai báo và gán giá trị cho roles

                // Kiểm tra xem người dùng có ảnh hay không và gán ảnh phù hợp
                var userLogoBase64 = currentUser.Photo != null ? Convert.ToBase64String(currentUser.Photo) : null;

                // Gán hình ảnh mặc định nếu không có ảnh
                var userLogoSrc = userLogoBase64 != null
                ? "data:image/png;base64," + userLogoBase64
                : (roles.Contains("Admin") ? "/img/logo/AdminLogo.png" : "/img/logo/UserLogo.png");

                var isEmployer = roles.Contains("Employer");
                var isAdmin = roles.Contains("Admin");

                var profileLink = isAdmin ? "/Admin/AdminDashboard/Index"
                : (isEmployer ? "/Employer/EmployerDashboard/Index"
                : "/User/UserProfile");

                <div class="avatar-button">
                    <img src="@userLogoSrc" alt="User Avatar" class="avatar-image" onclick="toggleAvatarMenu()">
                    <div class="avatar-menu-content">
                        <a href="@profileLink"><i class="fas fa-user-circle"></i> @(isAdmin || isEmployer ? "Trang quản lý" : "Trang cá nhân")</a>
                        @if (!isEmployer && !isAdmin)
                        {
                            <a href="/User/UserChat"><i class="fas fa-envelope"></i> Tin nhắn</a>
                        }
                        <form method="post" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                            <button type="submit"><i class="fas fa-sign-out-alt"></i> Đăng xuất</button>
                        </form>
                    </div>
                </div>
            }
        }

        else
        {
            <!-- Dùng flex để giữ các nút "Đăng ký" và "Đăng nhập" trên cùng một dòng -->
            <div class="d-flex justify-content-end align-items-center">
                <a href="@Url.Page("/Account/Register", new { area = "Identity" })" class="custom-button register-button">Đăng ký</a>
                <a href="@Url.Page("/Account/Login", new { area = "Identity" })" class="custom-button login-button">Đăng nhập</a>
            </div>
        }
    </div>





    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        function toggleAvatarMenu() {
            const menuContent = document.querySelector('.avatar-menu-content');
            menuContent.style.display = menuContent.style.display === 'block' ? 'none' : 'block';
        }

        document.addEventListener('click', function (event) {
            const avatarButton = document.querySelector('.avatar-button img');
            const avatarMenu = document.querySelector('.avatar-menu-content');
            if (event.target !== avatarButton && !avatarMenu.contains(event.target)) {
                avatarMenu.style.display = 'none';
            }
        });
    </script>
</body>
</html>

